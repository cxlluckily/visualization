<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.shankephone.data.monitoring.web.device.dao.mysql.FailureInfoDao">
   
    <insert id="insert"  parameterType="com.shankephone.data.monitoring.web.device.model.FailureInfo">
  		INSERT IGNORE INTO FAILURE_INFO 
  		<trim prefix="(" suffix=")" suffixOverrides=",">
		city_code,
		city_name,
		line_code,
		line_name,
		station_code,
		station_name,
		device_id,
		device_name,
		device_type,
		device_type_name,
		failure_type,
		status_value,
		area_code,
		failure_time,
		create_time
		</trim>
  		<trim prefix="values (" suffix=")" suffixOverrides=","> 
		#{city_code},
		#{city_name},
		#{line_code},
		#{line_name},
		#{station_code},
		#{station_name},
		#{device_id},
		#{device_name},
		#{device_type},
		#{device_type_name},
		#{failure_type},
		#{status_value},
		#{area_code},
		#{failure_time},
		#{create_time}
		</trim> 
  	</insert>
  	
  	<delete id="deleteByDeviceId">
  		delete from failure_info where city_code = #{city_code} and device_id = #{device_id} and failure_type = #{failure_type}
  	</delete>
  	
  	<update id="update" parameterType="com.shankephone.data.monitoring.web.device.model.FailureInfo">
  		update failure_info set online_status = #{online_status}, 
  		online_status_name = #{online_status_name},
  		status_value = #{status_value}, failure_time = #{failure_time}, 
  		create_time = #{create_time} 
  		where city_code = #{city_code} and device_id = #{device_id}
  	</update>
  	
  	<select id="queryById" resultType="com.shankephone.data.monitoring.web.device.model.FailureInfo">
  		select * from failure_info where city_code = #{city_code} and device_id = #{device_id} and failure_type = #{failure_type}
  	</select>
  	
  	<select id="queryList" resultType="com.shankephone.data.monitoring.web.device.model.FailureInfo">
  		select * from failure_info order by failure_time desc 
  	</select>
  	
  	<select id="queryListByCityCode" resultType="com.shankephone.data.monitoring.web.device.model.FailureInfo">
  		select * from failure_info 
  		<if test="city_code!=null and city_code!=''">  
		    where city_code = #{city_code}  
		</if>
  		order by failure_time desc 
  	</select>
  	
  	<select id="queryDeviceCount" resultType="map">
  		select city_code, station_code, count(device_id) device_num from failure_info group by city_code,station_code
  	</select>
  	
  	<select id="queryDeviceCountByCityCode" resultType="map">
  		select count(station_code) station_num, ifnull(sum(device_num),0) device_num from (
	  		select station_code, count(device_id) device_num from failure_info 
	  		<if test="city_code!=null and city_code!=''">  
			    where city_code = #{city_code}  
			</if>  
	  		group by station_code
  		) a
  	</select>
  	
  	<select id="queryStationDeviceCountByCityCode" resultType="map">
  		select station_name, station_code, status_value, count(device_id) device_num from failure_info 
  			<if test="city_code!=null and city_code!=''">  
			    where city_code = #{city_code}  
			</if>  
  		group by station_name, status_value
  	</select>
  	
  	<select id="queryFailureTypeCountByCityCode" resultType="map">
  		select status_value, count(device_id) device_num from failure_info 
  			<if test="city_code!=null and city_code!=''">  
			    where city_code = #{city_code}  
			</if>  
  		group by status_value
  	</select>
  	
  	<select id="queryDeviceStatusByStationName" resultType="map">
	  	select 
	  		device_type,
	       device_id,
	       device_name,
	       group_concat(status_value) failure_status,
	       failure_time,
	       TIMESTAMPDIFF(MINUTE,failure_time,now()) duration,
	       area_code
		from failure_info
		where city_code = #{city_code} and station_name = #{station_name}
		group by device_id
		order by failure_time desc
  	</select>
  	<!-- 站点-设备汇总 -->
  	<select id="queryDeviceTypeCountByCityCode" resultType="map">
  		SELECT SUM(station_num) station_num, SUM(device_num) device_num FROM (
			SELECT COUNT(station_name) station_num, device_num FROM (
				SELECT station_name, COUNT(device_id) device_num FROM failure_info 	
				<if test="city_code!=null and city_code!=''">  
				    where city_code = #{city_code}  
				</if>  
				GROUP BY station_name
			) a GROUP BY station_name
			
		) b 
  	</select>
  	
  	<!-- 站点故障 -->
  	<select id="queryStationDeviceTypeCountByCityCode" resultType="map">
	  	SELECT station_name, station_code, status_value, ifnull(SUM(ticket_num),0) ticket_num, ifnull(SUM(gate_num),0) gate_num FROM (
			SELECT station_name, station_code, status_value, IFNULL(gpj_num,0) ticket_num, IFNULL(zj_num,0) gate_num FROM (
				SELECT station_name, station_code, status_value, CASE WHEN device_type = '01' THEN device_num END gpj_num, 
				CASE WHEN device_type = '02' THEN device_num END zj_num FROM (
					SELECT station_name, MAX(station_code) station_code, status_value, device_type, COUNT(device_id) device_num
					FROM 
					(
						SELECT city_code,station_name,station_code, CASE WHEN status_value = '4' THEN '3' ELSE status_value END status_value,
						device_type, device_id FROM failure_info 
						<if test="city_code!=null and city_code!=''">  
						    where city_code = #{city_code}  
						</if>  
					) t 		
								
					GROUP BY station_name, status_value,  device_type
					ORDER BY station_code
				) a
			) b
		) c GROUP BY station_name, station_code, status_value
  	</select>
  	
  	<!-- 故障分类 -->
  	<select id="queryFailureDeviceTypeCountByCityCode" resultType="map">
  		SELECT status_value, ifnull(SUM(ticket_num),0) ticket_num, ifnull(SUM(gate_num),0) gate_num FROM (
			SELECT status_value, device_type, IFNULL(gpj_num,0) ticket_num, IFNULL(zj_num,0) gate_num FROM (
				SELECT status_value, device_type, CASE WHEN device_type = '01' THEN device_num END gpj_num, 
				CASE WHEN device_type = '02' THEN device_num END zj_num FROM (
					SELECT status_value, device_type, COUNT(device_id) device_num 
					FROM 
					(
						SELECT CASE WHEN status_value = '4' THEN '3' ELSE status_value END status_value,
						device_type, device_id FROM failure_info 
						<if test="city_code!=null and city_code!=''">  
						    where city_code = #{city_code}  
						</if>  	
					) t  
					GROUP BY status_value, device_type
				) a
			) b
		) c GROUP BY status_value
  	</select>
  	
  	
  	<select id="queryRtRecording" resultType="map">
	  	select 
	       station_name,
	       device_type,
	       device_id,
	       status_value,
	       failure_time,
	       TIMESTAMPDIFF(MINUTE, failure_time,now()) duration,
	       area_code
		from failure_info
		<where>
			<if test=" city_code != null and city_code != '' ">
				city_code = #{city_code}
			</if>
			<if test=" station_name != null and station_name != '' ">
				and station_name = #{station_name}
			</if>
			<if test=" device_id != null and device_id != '' ">
				and device_id = #{device_id}
			</if>
			<if test=" device_type != null and device_type != '' ">
				and device_type = #{device_type}
			</if>
			<if test=" status_value != null and status_value != '' ">
				and status_value = #{status_value}
			</if>
			<if test=" start_time != null and start_time != '' and end_time != null and end_time != '' ">
				and failure_time between #{start_time} and #{end_time}
			</if>
		</where>
		order by failure_time desc
		limit #{offset},10

  	</select>
  	
  	<select id="countTotalNum" resultType="int">
  	select count(*)
  	from failure_info
  	<where>
		<if test=" city_code != null and city_code != '' ">
			city_code = #{city_code}
		</if>
		<if test=" station_name != null and station_name != '' ">
			and station_name = #{station_name}
		</if>
		<if test=" device_id != null and device_id != '' ">
			and device_id = #{device_id}
		</if>
		<if test=" device_type != null and device_type != '' ">
			and device_type = #{device_type}
		</if>
		<if test=" status_value != null and status_value != '' ">
			and status_value = #{status_value}
		</if>
		<if test=" start_time != null and start_time != ''  ">
			and failure_time >= #{start_time} and #{end_time}
		</if>
		<if test=" end_time != null and end_time != '' ">
			and failure_time &lt; #{end_time}
		</if>
	</where>
  	</select>
  	
 </mapper>






